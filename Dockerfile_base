FROM ubuntu:18.04
LABEL maintainer "jialing.xu@langyangtech.com"
WORKDIR /root

# install opencv
RUN echo "deb http://security.ubuntu.com/ubuntu xenial-security main" >> /etc/apt/sources.list \
  && apt-get update \
  && apt-get -yqq install --no-install-recommends \
  git wget build-essential g++ ca-certificates vim cmake \
  libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev \
  python3-dev python3-pip python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev \
  
# download opencv source code
  && git clone -b 3.4.2 https://github.com/opencv/opencv.git \
  && git clone -b 3.4.2 https://github.com/opencv/opencv_contrib.git \
  
# build code
  && cd  opencv \
  && mkdir build \
  && cd build \
  && mkdir /usr/local/opencv3.4.2 \
  && cmake -D CMAKE_BUILD_TYPE=RELEASE \
  -D CMAKE_INSTALL_PREFIX=/usr/local \
  -D INSTALL_C_EXAMPLES=OFF \
  -D INSTALL_PYTHON_EXAMPLES=OFF \
  -D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib/modules \
  -D OPENCV_PYTHON3_INSTALL_PATH=/usr/local/opencv3.4.2 \
  -D WITH_TBB=ON \
  -D WITH_V4L=ON \
  -D WITH_QT=OFF \
  -D WITH_GTK=ON  \
  -D WITH_OPENGL=ON \
  -D WITH_CUDA=OFF \
  -D BUILD_EXAMPLES=OFF .. \
  
  && make -j8 \
  && make install \
  && ldconfig \
  && pip3 install opencv-python==3.4.2.17 \
  && cd /root \
  && rm -rf opencv opencv_contrib \
  && apt-get autoremove -y cmake \

# install cmake3.14.3
  && wget https://github.com/Kitware/CMake/releases/download/v3.14.3/cmake-3.14.3.tar.gz \
  && tar xzvf cmake-3.14.3.tar.gz \
  && rm cmake-3.14.3.tar.gz \
  && mv cmake-3.14.3 /usr/bin/cmake \
  && cd /usr/bin/cmake \
  && ./bootstrap \
  && make \
  && make install \
  && cmake --version \

# install python2.7.9
  && cd /root \
  && wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz \
  && tar -zxvf Python-2.7.9.tgz \
  && rm Python-2.7.9.tgz \
  && cd Python-2.7.9 \
  && ./configure --prefix=/usr/local/python-2.7.9 \
  && make \
  && make install \
  && ln -s /usr/local/python-2.7.9/bin/python /usr/bin/python2.7.9 \
  && cd .. \
  && rm -rf Python-2.7.9 \
  && export PATH=$PATH:/usr/bin:/usr/sbin:/bin:/sbin:/usr/local/bin:/usr/local/python-2.7.9/bin \

# install jsoncpp and scons
  && cd /root \
  && wget https://nchc.dl.sourceforge.net/project/jsoncpp/jsoncpp/0.5.0/jsoncpp-src-0.5.0.tar.gz \
  && wget https://jaist.dl.sourceforge.net/project/scons/scons/2.1.0/scons-2.1.0.tar.gz \
  && tar xzvf jsoncpp-src-0.5.0.tar.gz \
  && tar xzvf scons-2.1.0.tar.gz \
  && rm -rf jsoncpp-src-0.5.0.tar.gz scons-2.1.0.tar.gz \
  && cd scons-2.1.0 \
  && python2.7.9 setup.py install \
  && cd ../jsoncpp-src-0.5.0 \
  && scons platform=linux-gcc \
  && cd .. \
  && rm -rf jsoncpp-src-0.5.0 scons-2.1.0 \
  && wget http://47.99.190.254/json.tar.gz \
  && tar xzvf json.tar.gz \
  && rm json.tar.gz \
  && mv json /usr/include/json \
  && cd /usr/include \
  && chmod -R 777 json \

# install tesseract4.1
  && cd /root \
  && apt-get install -y --no-install-recommends\
  automake libtool libleptonica-dev pkg-config \
  && git clone --depth 1 https://github.com/tesseract-ocr/tesseract.git --branch 4.1 --single-branch \
  && mv tesseract /usr/bin/tesseract \
  && cd /usr/bin/tesseract \
  && rm -rf .git \
  && ./autogen.sh \
  && ./configure \
  && make \
  && make install \
  && ldconfig \
  && apt-get autoremove -y ca-certificates automake git \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
