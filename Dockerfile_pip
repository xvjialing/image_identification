FROM registry.cn-hangzhou.aliyuncs.com/xvjialing/image_identification:base

WORKDIR /root

# install opencv3.4.2
RUN echo "deb http://security.ubuntu.com/ubuntu xenial-security main" >> /etc/apt/sources.list \
  && apt-get update \
  && apt-get -yqq install --no-install-recommends \
  build-essential \
  git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev \
  python3-dev python3-pip python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev \
  vim \
# download opencv source code
  && git clone -b 3.4.2 https://github.com/opencv/opencv.git \
  && git clone -b 3.4.2 https://github.com/opencv/opencv_contrib.git \
  
# build code
  && cd  opencv \
  && mkdir build \
  && cd build \
  && mkdir /usr/local/opencv3.4.2 \
  && cmake -D CMAKE_BUILD_TYPE=RELEASE \
  -D CMAKE_INSTALL_PREFIX=/usr/local \
  -D INSTALL_C_EXAMPLES=OFF \
  -D INSTALL_PYTHON_EXAMPLES=OFF \
  -D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib/modules \
  -D OPENCV_PYTHON3_INSTALL_PATH=/usr/local/opencv3.4.2 \
  -D WITH_TBB=ON \
  -D WITH_V4L=ON \
  -D WITH_QT=OFF \
  -D WITH_GTK=ON  \
  -D WITH_OPENGL=ON \
  -D WITH_CUDA=OFF \
  -D BUILD_opencv_xfeatures2d=OFF \
  -D BUILD_EXAMPLES=OFF .. \
  
  && make -j8 \
  && make install \
  && ldconfig \
  && pip3 install opencv-python==3.4.2.17 \
  && cd /root \
  && rm -rf opencv opencv_contrib \
  && apt-get autoremove -y git \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

  
# install pytorch  
RUN pip3 install --upgrade setuptools \
  && pip3 install https://download.pytorch.org/whl/cpu/torch-1.1.0-cp36-cp36m-linux_x86_64.whl \
  && pip3 install https://download.pytorch.org/whl/cpu/torchvision-0.3.0-cp36-cp36m-linux_x86_64.whl
  
# install python
  RUN pip3 install flask Flask-Cors tensorflow==1.13.1 tensorflow-serving-api==1.13.0 xmlrunner requests 


    

    
    